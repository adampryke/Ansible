---
- name: Uninstall applications from Fedora desktop
  hosts: all  # Change to your target host group or specific hostname
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  
  vars:
    # List of packages to uninstall (KDE/Plasma specific)
    packages_to_remove:
      # Browsers
      - firefox
      - konqueror
      
      # Office suites
      - libreoffice-*
      - calligra-*
      
      # Email clients
      - thunderbird
      - kmail
      - kontact
      - neochat
      
      # Media players
      - dragon
      - elisa-player
      - kamoso  # webcam app
      - k3b    # CD/DVD burning
      - qrca
      
      # PIM applications
      - korganizer
      - kaddressbook
      - akregator  # RSS reader
      
      # Games
      - kmahjongg
      - kmines
      - kpat
      - knights
      
      # Other KDE apps
      - krfb       # desktop sharing
      - krdc       # remote desktop client
      - kget       # download manager
      - ktorrent
      - kwrite
      
      # Add more packages here
    
    # Set to true to also remove dependencies no longer needed
    autoremove: true
    
  tasks:
    - name: Check if dnf5 exists
      ansible.builtin.stat:
        path: /usr/bin/dnf5
      register: dnf5_check
    
    - name: Check if dnf exists
      ansible.builtin.stat:
        path: /usr/bin/dnf
      register: dnf_check
    
    - name: Fail if neither dnf nor dnf5 is found
      ansible.builtin.fail:
        msg: "DNF package manager not found. Are you running this on a Fedora system?"
      when: not dnf5_check.stat.exists and not dnf_check.stat.exists
    
    - name: Set dnf command
      ansible.builtin.set_fact:
        dnf_cmd: "{{ '/usr/bin/dnf5' if dnf5_check.stat.exists else '/usr/bin/dnf' }}"
        dnf_backend: "{{ 'dnf5' if dnf5_check.stat.exists else 'dnf4' }}"
    
    - name: Ensure python3-libdnf5 is installed (for dnf5)
      ansible.builtin.command: "{{ dnf_cmd }} install -y python3-libdnf5"
      changed_when: false
      failed_when: false
      when: dnf5_check.stat.exists
    
    - name: Display packages to be removed
      ansible.builtin.debug:
        msg: "The following packages will be removed: {{ packages_to_remove }}"
    
    - name: Uninstall specified packages
      ansible.builtin.dnf:
        name: "{{ packages_to_remove }}"
        state: absent
        use_backend: "{{ dnf_backend }}"
        disable_gpg_check: no
        install_weak_deps: no
        allowerasing: yes
      check_mode: no
      register: uninstall_result
    
    - name: Remove unused dependencies (autoremove)
      ansible.builtin.dnf:
        autoremove: yes
        use_backend: dnf5
      when: autoremove | bool
      register: autoremove_result
    
    - name: Display uninstall results
      ansible.builtin.debug:
        msg: "Packages successfully removed"
      when: uninstall_result.changed
    
    - name: Display autoremove results
      ansible.builtin.debug:
        msg: "Unused dependencies removed"
      when: autoremove_result.changed | default(false)
    
    - name: Clean DNF cache
      ansible.builtin.command:
        cmd: dnf clean all
      changed_when: true
      
    - name: No changes made
      ansible.builtin.debug:
        msg: "No packages were removed (they may not have been installed)"
      when: not uninstall_result.changed
